README - banshee

Installation
1. Place the 'ip' directory into your Django project directory.

2. Update your project settings.py by adding 'ip' into your INSTALLED_APPS.

3. Run 'python manage.py syncdb', you should see this:
   Creating table ip_bannedip

4. Update at least the following entries in banshee.config:
   # API to add newly banned IP address
   'ban_ip_url': 'http://localhost/ip/ban_ip'

   # List of strings that may appear in request URL; these are the monitored requests
   'watchlist':  [
       '/app1',
       '/app2',
   ],

5. Add a cronjob entry to run banshee.py every 15 minutes, example:
   */15 * * * * python BANSHEE_PY --access_log=ACCESS_LOG >> banshee.log 2>&1
   - Replace BANSHEE_PY with the absolute path to banshee.py
   - Replace ACCESS_LOG with the absolute path to your web server access log
   - Piping the STDOUT and STDERR to banshee.log is optional
   - Change banshee.config['lifetime'] accordingly if you wish to change the cronjob interval

Usage
1. Use ip.is_allowed_ip view function to check if an IP address has been banned.

2. The default max. requests that a particular IP address can make within 15 minutes period is set to 50.
   Change banshee.config['max_requests'] if you wish to increase or decrease this value.

3. Certain user agents are never banned by banshee, e.g. Googlebot.
   You may want to change the list of these user agents in banshee.config['passthrough_user_agents']

4. Banshee recognizes web server access log that uses the following log format:
   LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
   If you are using other log format, you may need to update banshee.config['log_regex']
